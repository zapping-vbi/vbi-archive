<?xml version="1.0"?>
<!--
title -> head
abstract -> short text that describes the page (for themes that support it)
-->
<document title="Resources" abstract="Stuff we wrote">
    <header>What can be found in here</header>
    Below are links or info about code we wrote that could be
    useful for other developers. Feel free to use these routines in
    your own programs. Feedback and patches are appreciated.

    <header>RTE</header>
    <p>Real Time Encoder. Takes the extremely fast <a href=
    "http://sourceforge.net/project/showfiles.php?group_id=2599">mp1e</a>
    encoding engine, ffmpeg and divx4linux and provides a simple and
    extensible API tailored to the needs of a Gnome application. Just
    provide the audio/video data, RTE will take care of the rest.</p>
    <p>Documentation is included, and for a quick overview now
    <a href="doc/librte">online</a>.</p>
    <br/>
    <br/>
     <b>Downloading:</b> There are some packages released with each
    Zapping version, but since rte is heavily worked on, you are
    encouraged to check out the rte module from Zapping <a href=
    "download.php#CVS">CVS</a>. 

    <header>TVeng</header>
    This is the abstraction layer between Zapping and the TV
    hardware. Supports V4L2, V4L and XVideo with a common API, you
    can think of it as TV capturing for dummies :) If you are
    thinking about playing with the TV device under Linux, you
    might find this interesting. <br/>
    <br/>
     <b>Downloading:</b> The latest tveng code is included in the
    Zapping source code, files <i>src/tveng*</i>. There were some
    some standalone tveng packages too, but these are no longer
    maintained.

    <header>Unicode regular expressions</header>
    We added support for UCS2 regular expressions in Zapzilla,
    adapted from Mark Leishner's URE package. Shouldn't be
    difficult to add UTF-8 support. <br/>
    <br/>
     <b>Downloading:</b> Comes with Zapping, the file named
    <i>common/ure.c</i>. 

    <header>ZConf</header>
    This is the configuration engine Zapping uses. Easy to use, it
    resembles the gconf api a bit, but much less powerful. Its main
    advantages are its robustness (i'm pretty confident it has no
    bugs) and its speed, once the configure tree is in memory
    there's little overhead in accessing the values. <br/>
    <br/>
     <b>Downloading:</b> Comes with Zapping, the file named
    <i>src/zconf.c</i>. 

    <header>ZVBI library</header>
    The Zapping/Zapzilla vbi decoding routines, now a standalone
    library. Documentation is included and <a href="doc/libzvbi">online</a>.
    <br/>
    <br/>
     <b>Downloading:</b> See the Zapping download page. <br/>
    <br/>
</document>
