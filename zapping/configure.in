dnl Process this file with autoconf to produce a configure script.

AC_INIT(src/callbacks.c)
AM_INIT_AUTOMAKE(zapping, 0.5.3cvs)
AM_CONFIG_HEADER(config.h)

dnl Pick up the Gnome macros.
AM_ACLOCAL_INCLUDE(macros)

AM_PROG_LIBTOOL

dnl ---------------------------------------------------------------------------
dnl disable X extensions
dnl ---------------------------------------------------------------------------
AC_MSG_CHECKING(whether to disable X extensions)
AC_ARG_ENABLE(
	x-extensions,
	[  --disable-x-extensions  Disable all X extensions],
	[disable_x_extensions="yes"],
	[disable_x_extensions="no"])
AC_MSG_RESULT($disable_x_extensions)
if test "$disable_x_extensions" = "yes"; then
	AC_DEFINE(DISABLE_X_EXTENSIONS)
else
	X_DGA_LIBS="-lXxf86dga -lXxf86vm"
	AC_SUBST(X_DGA_LIBS)
fi

dnl ---------------------------------------------------------------------------
dnl enable V4L/V4L2 checks on startup of tveng
dnl ---------------------------------------------------------------------------
AC_MSG_CHECKING(whether to disable some checks on the V4L devices)
AC_ARG_ENABLE(
	tveng-checks,
	[  --disable-tveng-checks  Disable some initial checks],
	[disable_tveng_checks="yes"],
	[disable_tveng_checks="no"])
AC_MSG_RESULT($disable_tveng_checks)
if test "$disable_tveng_checks" = "yes"; then
	AC_DEFINE(TVENG_DISABLE_IOCTL_TESTS)
fi

GNOME_INIT
AC_ISC_POSIX
AC_PROG_CC
AM_PROG_CC_STDC
AC_HEADER_STDC

dnl ----------------------------------------------------------------------
dnl Check the PNG writing library
dnl ----------------------------------------------------------------------
PNG_LIB=""
AC_CHECK_LIB(png, png_create_write_struct, PNG_LIB="-lpng",
AC_CHECK_LIB(png, png_create_write_struct, PNG_LIB="-lpng -lz",
AC_MSG_ERROR(**** Cannot link a simple program with libpng ****), "-lz"))
AC_SUBST(PNG_LIB)

GNOME_COMPILE_WARNINGS
GNOME_X_CHECKS
GNOME_XML_CHECK

dnl ----------------------------------------------------------------------
dnl Check which libxml syntax we will use (children vs. childs)
dnl ----------------------------------------------------------------------
AC_MSG_CHECKING(which syntax to use for xml child nodes)
AC_TRY_LINK([#include <gnome-xml/tree.h>],
[
xmlNodePtr node;
node->childs = NULL;
return 0;
],
AC_MSG_RESULT(childs)
AC_DEFINE(LIBXML_CHILDS),
AC_MSG_RESULT(children))

dnl ----------------------------------------------------------------------
dnl Check for existance of xmlDocGetRootNode and friends
dnl ----------------------------------------------------------------------
AC_CHECK_LIB(xml, xmlDocGetRootNode,, AC_DEFINE(LIBXML_NO_ROOT))

AM_PATH_LIBGLADE(,
AC_MSG_ERROR(*** Cannot find libglade in your system. Is it installed? ***),
gnome)

dnl Add the languages which your application supports here.
ALL_LINGUAS="es fr"
AM_GNU_GETTEXT

dnl Set PACKAGE_LOCALE_DIR and PACKAGE_DATA_DIR in config.h.
if test "x${prefix}" = "xNONE"; then
  AC_DEFINE_UNQUOTED(PACKAGE_LOCALE_DIR,
	"${ac_default_prefix}/${DATADIRNAME}/locale")
  AC_DEFINE_UNQUOTED(PACKAGE_DATA_DIR,
	"${ac_default_prefix}/${DATADIRNAME}/${PACKAGE}")
else
  AC_DEFINE_UNQUOTED(PACKAGE_LOCALE_DIR, "${prefix}/${DATADIRNAME}/locale")
  AC_DEFINE_UNQUOTED(PACKAGE_DATA_DIR, "${prefix}/${DATADIRNAME}/${PACKAGE}")
fi

dnl Subst PACKAGE_PIXMAPS_DIR.
PACKAGE_PIXMAPS_DIR="${datadir}/pixmaps/${PACKAGE}"
AC_SUBST(PACKAGE_PIXMAPS_DIR)

AC_OUTPUT([
zapping.spec
Makefile
macros/Makefile
pixmaps/Makefile
src/Makefile
intl/Makefile
po/Makefile.in
zapping_setup_fb/Makefile
glade/Makefile
help/Makefile
help/C/Makefile
plugins/Makefile
plugins/template/Makefile
plugins/screenshot/Makefile
])
