  <sect1 id="zapzilla">
    <title>Teletext</title>

    <para>Zapping has a built-in Teletext viewer called Zapzilla.</para>

    <figure id="zapzilla-figure"> 
      <title>Zapzilla</title> 
      <screenshot>
	<mediaobject> 
	  <imageobject>
	    <imagedata fileref="figures/zapzilla.png" format="PNG"/> 
	  </imageobject>
	  <textobject>
	    <phrase>Zapzilla window. Contains titlebar, menubar, toolbar, display area showing a Teletext page, and statusbar. The menubar contains File, Edit, Go and Bookmarks menus.</phrase>
	  </textobject>
	</mediaobject>
      </screenshot>
    </figure>

    <para>The Zapzilla window contains a menu, toolbar and a context menu which opens when you click on the page with the right mouse button.</para>

    <figure id="zapzilla-context-figure"> 
      <title>Zapzilla Context Menu</title>
      <screenshot>
	<mediaobject>
	  <imageobject>
	    <imagedata fileref="figures/zapzilla-context.png" format="PNG"/>
	  </imageobject>
	  <textobject>
	    <phrase>Context menu with New window, Save as, Search, Colors, Subtitles, and Bookmarks entries.</phrase>
	  </textobject>
	</mediaobject>
      </screenshot>
    </figure>

    <sect2 id="zapzilla-navigation-embed">
      <title>To Start Teletext</title>

      <para>You can browse Teletext in the main video window or open new Teletext windows. To do the former, choose <menuchoice>
          <guimenu>View</guimenu>
          <guisubmenu>Teletext</guisubmenu>
        </menuchoice> from the main menu, <menuchoice>
          <guimenu>Teletext</guimenu>
        </menuchoice> from the context menu, or click on the <guilabel>Teletext</guilabel> button in the toolbar.</para>
      <para>Only a subset of the Teletext toolbar buttons and context menu items appears in this mode, along with video related items. It is not yet possible to browse Teletext in fullscreen mode.</para>
      <para>To leave the Teletext mode, choose one of the video display modes (fullscreen, capture or overlay mode) or click on the <guilabel>Video</guilabel> button in the toolbar.</para>
    </sect2>

    <sect2 id="zapzilla-navigation-new-window">
      <title>To Open a New Teletext Window</title>

      <para>In the video window, choose <menuchoice>
          <guimenu>View</guimenu>
          <guisubmenu>New Teletext View</guisubmenu>
        </menuchoice> from the main menu.</para>
      <para>In a Teletext window, choose <menuchoice>
          <guimenu>File</guimenu>
          <guisubmenu>New Window</guisubmenu>
        </menuchoice> from the main menu, <menuchoice>
          <guimenu>New Window</guimenu>
        </menuchoice> from the context menu, or click on the <guilabel>New</guilabel> button in the toolbar.</para>
    </sect2>
    
    <sect2 id="zapzilla-navigation-open-page">
      <title>To Open a Teletext Page</title>
      
      <para>Type the page number on the keyboard. You can also press the cursor keys or click on the small arrow buttons in the toolbar to go to the next or previous page or subpage.</para>
      <para>You can click on a page number in the page. With the first mouse button the page opens in the same window, with the third (middle) button in a new window. When the page has subpages it often contains a subpage number like 2/5 (meaning this is subpage 2 of 5). As with page numbers you can click on this number to go to the next subpage.</para>
      <para>If Zapzilla can identify web links or e-mail addresses you can click on them to open your web browser or e-mail application.</para>
    </sect2>
    
    <sect2 id="zapzilla-navigation-rotating-subpages">
      <title>Rotating Subpages</title>
      
      <para>When you open a page it will automatically rotate through its subpages, if it has any. This can be disabled by clicking on the page number in the toolbar.</para>
    </sect2>

    <sect2 id="zapzilla-navigation-top-flof">
      <title>Links in the last row</title>
      
      <para>Some TV stations provide a basic navigation system called TOP or FLOF. Here the last row of the page shows links to important pages or sections. You can click on these links to browse the Teletext. A TOP index is available on page 900.</para>
    </sect2>

    <sect2 id="zapzilla-navigation-bookmarks">
	<title>Bookmarks</title>
      
      <para>When you choose <menuchoice>
          <guimenu>Bookmarks</guimenu>
          <guisubmenu>Add Bookmark</guisubmenu>
        </menuchoice> from the main or context menu the current page will be added to the <guimenu>Bookmarks</guimenu> menu. When you choose a bookmark Zapzilla will change to the respective channel and open the page. You can edit the bookmarks by choosing <menuchoice>
          <guimenu>Bookmarks</guimenu>
          <guisubmenu>Edit Bookmarks</guisubmenu>
        </menuchoice>.</para>
      
      <para>Some TV stations provide additional information, for example links to a program schedule page or subtitle pages. Similar to bookmarks these pages are listed in the context menu, subtitle pages in the <guisubmenu>Subtitles</guisubmenu> submenu.</para>
    </sect2>
    
    <sect2 id="zapzilla-navigation-history">
      <title>History</title>

      <para>By clicking on the <guilabel>Back</guilabel> and <guilabel>Forward</guilabel> buttons in the toolbar, or by choosing from the <menuchoice>
          <guimenu>Go</guimenu>
        </menuchoice> menu you can browse through previously visited pages. The <guilabel>Index</guilabel> button brings you back to the main page, usually page 100.</para>
    </sect2>
    
    <sect2 id="zapzilla-concealed">
      <title>Concealed Text</title>

      <para>Teletext pages can contain concealed text, typically to hide quiz answers. You can see this text after clicking on the <guilabel>Reveal</guilabel> button in the toolbar.</para>
    </sect2>
    
    <sect2 id="zapzilla-export">
      <title>Exporting Pages</title>
      
      <para>Zapzilla supports the X Window clipboard. To mark a section of text, click on the page with the left mouse button and drag the mouse while pressing the button. When you press the <keycap>Shift</keycap> key at the same time you can mark a rectangular section of text. There is no cut or copy menu, to paste the text simply move the mouse pointer into another application window and press the third (middle) mouse button.</para>

      <para>You can save a Teletext page in various formats by choosing <menuchoice>
	  <guimenu>File</guimenu>
	  <guisubmenu>Save As</guisubmenu>
	</menuchoice> from the main menu, or <menuchoice>
	  <guimenu>Save As</guimenu>
	</menuchoice> from the context menu.</para>

      <figure id="zapzilla-save-as-figure"> 
	<title>Zapzilla Save As Dialog</title>
	<screenshot>
	  <mediaobject> 
	    <imageobject>
	      <imagedata fileref="figures/zapzilla-export.png" format="PNG"/> 
	    </imageobject>
	    <textobject>
	      <phrase>Save As dialog. Contains filename entry, format menu and format options.</phrase>
	    </textobject>
	  </mediaobject>
	</screenshot>
      </figure>

      <para>You can enter a filename for the page and choose a file format. Options will appear depending on the chosen format:</para>

      <variablelist>
	<varlistentry>
	  <term><guilabel>Graphics char</guilabel></term>
	  <listitem><para>Text based formats cannot represent graphics characters in Teletext pages. Here you can enter a replacement.</para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term><guilabel>Color (CSS)</guilabel></term>
	  <listitem><para>This is a HTML option. When enabled, page colors will be encoded as Cascading Style Sheets markup.</para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term><guilabel>HTML header</guilabel></term>
	  <listitem><para>This is another HTML option. When disabled the HTML header will be omitted, which is useful to integrate several pages in one HTML file.</para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term><guilabel>Correct aspect ratio</guilabel></term>
	  <listitem><para>This is a graphical format option. When enabled the image will be scaled to the correct aspect ratio.</para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term><guilabel>Control codes</guilabel></term>
	  <listitem><para>This is a text format option. You can choose if terminal control codes shall be inserted to preserve colors and some text styles. If the page uses more than the eight primary colors the actual color will be approximated.</para>
	  </listitem>
	</varlistentry>
      </variablelist>
    </sect2>

    <sect2 id="zapzilla-search">
      <title>Search the page memory</title>

      <para>You can search for text in the page memory by choosing <menuchoice>
	  <guimenu>Edit</guimenu>
	  <guisubmenu>Search</guisubmenu>
	</menuchoice> from the main menu, <menuchoice>
	  <guimenu>Search</guimenu>
	</menuchoice> from the context menu, or by clicking on the <guilabel>Find</guilabel> button in the toolbar.</para>

      <figure id="zapzilla-search-figure"> 
	<title>Zapzilla Search Dialog</title>
	<screenshot>
	  <mediaobject> 
	    <imageobject>
	      <imagedata fileref="figures/zapzilla-search.png" format="PNG"/> 
	    </imageobject>
	    <textobject>
	      <phrase>Search dialog. Contains text entry, regular expression and case insensitive option, cancel, forward and back button.</phrase>
	    </textobject>
	  </mediaobject>
	</screenshot>
      </figure>

      <para>Enter a text and click on the <guilabel>Forward</guilabel> button to find the next occurence of the text. Accordingly <guilabel>Back</guilabel> will find the previous occurence. When the text has been found, the Zapzilla window will show the page with the search text highlighted.</para>

      <sect3 id="zapzilla-regexp">
	<title>Regular Expressions</title>

	<para>Regular expressions are a powerful way to search certain patterns in a text. Apart of simply giving the text you want to find, you can build a set of rules to be matched, allowing for much more complex search patterns.</para>
	<para>Unicode is a way of encoding characters that aims to support all possible character sets in the world. Using Unicode we can assign a unique code to every character, disregarding whether it is Latin, Greek, Cyrillic, Hebrew or Arabic. Zapzilla uses a Unicode flavour called UCS-2, representing each character as a 16 bit number.</para>
	<para>Regular expressions have a syntax in which a few characters are special constructs and the rest are "ordinary". An ordinary character is a simple regular expression which matches that same character and nothing else. The special characters are <userinput>$</userinput>, <userinput>^</userinput>, <userinput>.</userinput>, <userinput>*</userinput>, <userinput>+</userinput>, <userinput>?</userinput>, <userinput>[</userinput>, <userinput>]</userinput> and <userinput>\</userinput>. Any other character appearing in a regular expression is ordinary, unless a <userinput>\</userinput> precedes it.</para>
	<para>For example, <userinput>f</userinput> is not a special character, so it is ordinary, and therefore <userinput>f</userinput> is a regular expression that matches the string "f" and no other string. (It does <emphasis>not</emphasis> match the string "ff".) Likewise, <userinput>o</userinput> is a regular expression that matches only "o". When searching case insensitive these regular expressions also match "F" and "O", but we consider this a generalization of "the same string," rather than an exception.</para>
	<para>Any two regular expressions A and B can be concatenated. The result is a regular expression which matches a string if A matches some amount of the beginning of that string and B matches the rest of the string.</para>
	<para>As a simple example, we can concatenate the regular expressions <userinput>f</userinput> and <userinput>o</userinput> to get the regular expression <userinput>fo</userinput>, which matches only the string "fo". Still trivial. To do something nontrivial, you need to use one of the special characters. Here is a list of them:</para>

	<variablelist>
	  <varlistentry>
	    <term><userinput>.</userinput> (Period)</term>
	    <listitem><para>is a special character that matches any single character except a newline, that is an invisible character marking the end of the line. Using concatenation, we can make regular expressions like <userinput>a.b</userinput>, which matches any three-character string that begins with "a" and ends with "b".</para>
	    </listitem>
	  </varlistentry>
	  <varlistentry>
	    <term><userinput>*</userinput></term>
	    <listitem><para>is not a construct by itself; it is a postfix operator that means to match the preceding regular expression repetitively as many times as possible. Thus, <userinput>o*</userinput> matches any number of "o"s (including no "o"s).</para>
	      <para><userinput>*</userinput> always applies to the <emphasis>smallest</emphasis> possible preceding expression. Thus, <userinput>fo*</userinput> has a repeating <userinput>o</userinput>, not a repeating <userinput>fo</userinput>. It matches "f", "fo", "foo", and so on.</para>
	      <para>The matcher processes a <userinput>*</userinput> construct by matching, immediately, as many repetitions as can be found. Then it continues with the rest of the pattern. If that fails, backtracking occurs, discarding some of the matches of the <userinput>*</userinput>-modified construct in case that makes it possible to match the rest of the pattern. For example, in matching <userinput>ca*ar</userinput> against the string "caaar", the <userinput>a*</userinput> first tries to match all three "a"s; but the rest of the pattern is <userinput>ar</userinput> and there is only "r" left to match, so this try fails. The next alternative is for <userinput>a*</userinput> to match only two "a"s. With this choice, the rest of the regular expression matches successfully.</para>
	    </listitem>
	  </varlistentry>
	  <varlistentry>
	    <term><userinput>+</userinput></term>
	    <listitem><para>is a postfix operator, similar to <userinput>*</userinput> except that it must match the preceding expression at least once. So, for example, <userinput>ca+r</userinput> matches the strings "car" and "caaaar" but not the string "cr", whereas <userinput>ca*r</userinput> matches all three strings.</para>
	    </listitem>
	  </varlistentry>
	  <varlistentry>
	    <term><userinput>?</userinput></term>
	    <listitem><para>is a postfix operator, similar to <userinput>*</userinput> except that it can match the preceding expression either once or not at all. For example, <userinput>ca?r</userinput> matches "car" or "cr"; nothing else.</para>
	    </listitem>
	  </varlistentry>
	  <varlistentry>
	    <term><userinput>[ ... ]</userinput></term>
	    <listitem><para>is a "character set", which begins with <userinput>[</userinput> and is terminated by <userinput>]</userinput>. In the simplest case, the characters between the two brackets are what this set can match.</para>
	      <para>Thus, <userinput>[ad]</userinput> matches either one "a" or one "d", and <userinput>[ad]*</userinput> matches any string composed of just "a"s and "d"s (including the empty string), from which it follows that <userinput>c[ad]*r</userinput> matches "cr", "car", "cdr", "caddaar", etc.</para>
	      <para>You can also include character ranges in a character set, by writing the starting and ending characters with a <userinput>-</userinput> between them. Thus, <userinput>[a-z]</userinput> matches any lower-case ASCII letter. Ranges may be intermixed freely with individual characters, as in <userinput>[a-z$%.]</userinput>, which matches any lower-case ASCII letter or "$", "%" or period.</para>
	      <para>Note that the usual regexp special characters are not special inside a character set. A completely different set of special characters exists inside character sets: <userinput>]</userinput>, <userinput>-</userinput> and <userinput>^</userinput>.</para>
	      <para>To include a <userinput>]</userinput> in a character set, you must make it the first character. For example, <userinput>[]a]</userinput> matches "]" or "a". To include a <userinput>-</userinput>, write <userinput>-</userinput> as the first or last character of the set, or put it after a range. Thus, <userinput>[]-]</userinput> matches both "]" and "-".</para>
	      <para>To include <userinput>^</userinput> in a set, put it anywhere but at the beginning of the set.</para>
	      <para>When you use a range in case-insensitive search, you should write both ends of the range in upper case, or both in lower case, or both should be non-letters.</para>
	    </listitem>
	  </varlistentry>
	  <varlistentry>
	    <term><userinput>[^ ... ]</userinput></term>
	    <listitem><para><userinput>[^</userinput> begins a "complemented character set", which matches any character except the ones specified. Thus, <userinput>[^a-z0-9A-Z]</userinput> matches all characters <emphasis>except</emphasis> letters and digits. <userinput>^</userinput> is not special in a character set unless it is the first character. The character following the <userinput>^</userinput> is treated as if it were first (in other words, <userinput>-</userinput> and <userinput>]</userinput> are not special there).</para>
	    </listitem>
	  </varlistentry>
	  <varlistentry>
	    <term><userinput>^</userinput></term>
	    <listitem><para>is a special character that matches the empty string, but only at the beginning of a row. Otherwise it fails to match anything. Thus, <userinput>^foo</userinput> matches a "foo" that occurs at the beginning of a row.</para>
	    </listitem>
	  </varlistentry>
	  <varlistentry>
	    <term><userinput>$</userinput></term>
	    <listitem><para>is similar to <userinput>^</userinput> but matches only at the end of a row. Thus, <userinput>x+$</userinput> matches a string of one "x" or more at the end of a line.</para>
	    </listitem>
	  </varlistentry>
	  <varlistentry>
	    <term><userinput>\</userinput></term>
	    <listitem><para>has two functions: it quotes the special characters (including <userinput>\</userinput> itself), and it introduces additional special constructs.</para>
	      <para>Because <userinput>\</userinput> quotes special characters, <userinput>\$</userinput> is a regular expression that matches only "$", and "\[" is a regular expression that matches only "[", and so on.</para>
	      <para><userinput>\x</userinput>, <userinput>\X</userinput>, <userinput>\u</userinput> or <userinput>\U</userinput> followed by a hexadecimal number of up to 4 digits will match Unicode characters. <userinput>\x00C9</userinput> for example matches "È"</para>
	    </listitem>
	  </varlistentry>
	  <varlistentry>
	    <term><userinput>#url#</userinput> and <userinput>#email#</userinput></term>
	    <listitem><para>are specific to Zapzilla. These regular expressions match any web or e-mail address, respectively.</para>
	    </listitem>
	  </varlistentry>
	</variablelist>

	<para>You can find a more comprehensive introduction to regular expressions in the regex manual page.</para>
      </sect3>
    </sect2>
  </sect1>

  <!--
Local Variables:
mode: sgml
coding: utf-8
sgml-parent-document: "zapping.xml"
indent-tabs-mode: nil
End:
  -->
