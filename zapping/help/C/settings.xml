  <sect1 id="zapping-settings"> 
    <title>Settings</title> 

    <para>To configure Zapping choose <menuchoice> 
	<guimenu>Edit</guimenu> 
	<guimenuitem>Preferences</guimenuitem> 
      </menuchoice>. The <guilabel>Preferences</guilabel> dialog contains the following sections.</para>

    <sect2 id="zapping-settings-video-device">
      <title>Video Device</title>

      <para>In this section you can select the device file name of
the kernel device to be used in <link linkend="zapping-video-modes">capture mode</link>. On Linux common names are:</para>
      <simplelist>
        <member><filename>/dev/video</filename></member>
        <member><filename>/dev/video0</filename></member>
        <member><filename>/dev/video1</filename></member>
        <member><filename>/dev/video2</filename></member>
        <member><filename>/dev/v4l/video</filename></member>
        <member><filename>/dev/v4l/video0</filename></member>
      </simplelist>
      <para>On FreeBSD:</para>
      <simplelist>
        <member><filename>/dev/bktr</filename></member>
        <member><filename>/dev/bktr0</filename></member>
        <member><filename>/dev/bktr1</filename></member>
        <member><filename>/dev/bktr2</filename></member>
      </simplelist>
      <para>Changes will take place after you quit and restart Zapping.</para>
      <para>There is no dialog to select an XVideo device, Zapping uses the first device it finds. This will be corrected in a future version.</para>
    </sect2>

    <sect2 id="zapping-settings-audio-device">
      <title>Audio Device</title>

      <para>Here you can select an audio device to <link linkend="zapping-record">record sound</link>. Usually a kernel device is the best choice. If your TV card has audio sampling hardware and the driver supports this, you can also select the TV card as recording device. This will free the soundcard to record from other sources.</para>
      <para>Common kernel device names are <filename>/dev/dsp</filename>, <filename>/dev/dsp0</filename>, <filename>/dev/dsp1</filename> and so on. Click on the down arrow of the device file entry to see a list of devices found by Zapping.</para>
      <para>If the audio output of your TV card connects to an audio input of your soundcard, or when your TV card has no audio capabilities, you will want to select <guilabel>Control volume with soundcard mixer</guilabel>. This has two advantages:</para>
      <itemizedlist>
        <listitem>
          <para>Zapping will properly set the volume control on the soundcard mixer <emphasis>and</emphasis> the TV card, you will not have to start a mixer application.</para>
        </listitem>
        <listitem>
          <para>When you change the volume or mute audio, recording is not affected.</para>
        </listitem>
      </itemizedlist>
      <para>When you select a kernel device as audio recording device, you should also enable this option to determine the correct audio input line.</para>
      <para>Common mixer device names are <filename>/dev/mixer</filename>, <filename>/dev/mixer0</filename>, <filename>/dev/mixer1</filename> and so on. Click on the down arrow of the device file entry to see a list of devices found by Zapping.</para>
    </sect2>

    <sect2 id="zapping-settings-main">
      <title>Main Window</title>

      <para>You can set the following preferences:</para>
      <variablelist>
        <varlistentry>
          <term><guilabel>Save window geometry</guilabel></term>
          <listitem>
            <para>Zapping does not support session management yet. When this option is selected, it will save the window geometry on exit and restore on startup in a non-standard way.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><guilabel>Show tooltips</guilabel></term>
          <listitem>
            <para>Whether to show tooltips.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><guilabel>Disable screensaver</guilabel></term>
          <listitem>
            <para>In video mode (not it Teletext mode) disable the screensaver from blanking the screen.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><guilabel>Save control values per channel</guilabel></term>
          <listitem>
            <para>When this option is selected Zapping saves and restores brightness, contrast, audio volume and other settings when you switch channels.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><guilabel>Enter channels by</guilabel></term>
          <listitem>
            <para>When you enter channel numbers on the numeric keypad or with your remote control, Zapping can interpret the numbers differently. In the United States you will want to choose by RF channel number (1 to 125). You can also choose by the number of the channel in the channel list, the first channel has number 0.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><guilabel>Title bar contents</guilabel></term>
          <listitem>
            <para>Here you can customize the appearance of the main window title bar. You can enter a string which is displayed literally, except for the following jokers:</para>
            <variablelist>
              <varlistentry>
                <term><userinput>$(alias)</userinput></term>
                <listitem>
                  <para>Name of the current channel, e.g. BBC1</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term><userinput>$(index)</userinput></term>
                <listitem>
                  <para>Number in the channel list</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term><userinput>$(id)</userinput></term>
                <listitem>
                  <para>RF channel name, e.g. S02</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term><userinput>$(freq)</userinput></term>
                <listitem>
                  <para>Tuning frequency</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term><userinput>$(standard)</userinput></term>
                <listitem>
                  <para>Video standard (PAL, NTSC, SECAM, &hellip;)</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term><userinput>$(input)</userinput></term>
                <listitem>
                  <para>Current video input on the TV card</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>
      </variablelist>
    </sect2>

    <sect2 id="zapping-settings-video-options">
      <title>Video Options</title>

      <para>You can set the following preferences:</para>
      <variablelist>
        <varlistentry>
          <term><guilabel>Fullscreen video resolution</guilabel></term>
          <listitem>
            <para>When switching to <link
            linkend="zapping-video-modes">fullscreen or background mode</link>, Zapping may not be able to enlarge the video to cover the whole screen, but it can change the display resolution to approximate the size of the video. Here you can select a particular resolution, automatic selection, or no change of display resolution.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><guilabel>Capture size under XVideo</guilabel></term>
          <listitem>
            <para>With the XVideo extension the image scaling hardware of your graphics card can be used to display captured video at almost any size. Here you can select the size of the <emphasis>captured</emphasis> video when using XVideo:</para>
            <variablelist>
              <varlistentry>
                <term><guilabel>320 &#151; 240</guilabel></term>
                <listitem>
                  <para>Fixed size 320 &#151; 240 pixels</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term><guilabel>Interlaced (window size)</guilabel></term>
                <listitem>
                  <para>The largest size supported by the video capture hardware, or the window size if smaller</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term><guilabel>Biggest noninterlaced</guilabel></term>
                <listitem>
                  <para>Interlaced video looks strange when scaled. This mode is similar to <guilabel>Interlaced</guilabel>, except noninterlaced video will be captured.</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><guilabel>Favorite picture sizes</guilabel></term>
          <listitem>
            <para>Here you can customize the <guimenu>Appearance</guimenu> submenu of the video window context menu. To add new line, click on the <guibutton>Add</guibutton> button. To remove a line, click on the line and then the <guibutton>Remove</guibutton> button. To change values, click on a line and then the desired column.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><guilabel>Resize using fixed increments</guilabel></term>
          <listitem>
            <para>When you select this option, the video window can only assume sizes which are a multiple of 32 pixels.</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </sect2>

    <sect2 id="zapping-settings-keyboard">
      <title>Keyboard</title>

      <para>In this section you can customize accelerators. Note that built-in accelerators such as those associated with menus or channel number entering on the numeric keypad take precedence over user configured ones.</para>

      <para>To add new accelerator, click on the <guibutton>Add</guibutton> button. To remove an accelerator click on the line and then the <guibutton>Remove</guibutton> button. To change a command, click on the line and type a new command in the command entry. Click on the down arrow to see a list of commands. To change a keyboard shortcut, click on the line and column.</para>
    </sect2>

    <sect2 id="zapping-settings-audio-options">
      <title>Audio Options</title>

      <para>Here you can select whether Zapping should automatically mute audio when the application starts, or before it quits.</para>
    </sect2>

    <sect2 id="zapping-settings-osd">
      <title>OSD Options</title>

      <para>Some operations such as entering a channel number or changing the audio volume by keyboard can display a status message. Here you can customize this On Screen Display.</para>
      <variablelist>
        <varlistentry>
          <term><guilabel>Display mode</guilabel></term>
          <listitem>
            <para>Whether to display messages superimposed onto the video (OSD), in a status bar of the video window, in a separate console window, or not at all.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><guilabel>Remove after</guilabel></term>
          <listitem>
            <para>How long the message remains visible in OSD mode.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><guilabel>Font</guilabel></term>
          <listitem>
            <para>Font to be used in OSD mode.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><guilabel>Foreground color</guilabel></term>
          <listitem>
            <para>Foreground (text) color to be used in OSD mode.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><guilabel>Background color</guilabel></term>
          <listitem>
            <para>Background color to be used in OSD mode.</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </sect2>

    <sect2 id="zapping-settings-vbi">
      <title>VBI Options</title>

      <variablelist>
        <varlistentry>
          <term><guilabel>Enable VBI decoding</guilabel></term>
          <listitem>
            <para>When this option is selected, Zapping will capture and decode VBI data transmitted by the current TV station. This enables Teletext browsing, Teletext subtitles, Closed Caption, and Zapping can automatically name the station (if the information is transmitted, respectively).</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><guilabel>Device file</guilabel></term>
          <listitem>
            <para>A dedicated kernel device is necessary to capture VBI data. If this is supported by your TV card and its driver, you can select the VBI device here. Common names are:</para>
            <simplelist>
              <member><filename>/dev/vbi</filename></member>
              <member><filename>/dev/vbi0</filename></member>
              <member><filename>/dev/vbi1</filename></member>
              <member><filename>/dev/vbi2</filename></member>
              <member><filename>/dev/v4l/vbi</filename></member>
              <member><filename>/dev/v4l/vbi0</filename></member>
            </simplelist>
            <para>The device should correspond to the selected kernel video device. Zapping will try to find it automatically, but this may fail. Changes will take place after you quit and restart Zapping.</para>
            <para>XVideo does not support VBI data capturing. You will be able to use VBI services only if your device also has a kernel driver.</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </sect2>

    <sect2 id="zapping-settings-teletext">
      <title>Teletext plugin</title>
      <variablelist>
        <varlistentry>
          <term><guilabel>Teletext implementation</guilabel></term>
          <listitem>
            <para>The Teletext standard knows different implementation levels. The built-in Teletext browser supports them all, but you can choose to see pages as displayed by simpler decoders. Note most stations still only transmit at the basic levels 1.0 or 1.5.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><guilabel>Default encoding</guilabel></term>
          <listitem>
            <para>Some stations fail to transmit a complete character set code, so the Teletext viewer may not display the correct font or national characters. You can select your geographical region as an additional hint.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><guilabel>Page memory size</guilabel></term>
          <listitem>
            <para>With this option you can limit the size of the page cache in memory. A complete set of pages of one station will require around 1000 KiB. When the limit is reached, Zapzilla will remove the last recently used pages and you must wait for retransmission to see them. Frequently visited pages like page 100 or subpages which take longer to reload get priority.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><guilabel>Number of channels in page memory</guilabel></term>
          <listitem>
            <para>The page memory can contain pages of more than one channel. When the limit is reached, Zapzilla will remove pages of the last recently used channel first.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><guilabel>Brightness and contrast</guilabel></term>
          <listitem>
            <para>These values change the brightness and contrast of the text in Teletext windows or the main window.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><guilabel>Scaling</guilabel></term>
          <listitem>
            <para>You can freely resize Teletext windows. There are different ways to scale the image, some give better visual results, others are faster.</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </sect2>

    <sect2 id="zapping-settings-recording">
      <title>Recording plugin</title>

      <para>In this section you can create different named recording configurations.</para>
    </sect2>

    <sect2 id="zapping-settings-screenshot">
      <title>Screenshot plugin</title>

      <para>In this section you can customize the screenshot plugin.</para>
      <variablelist>
        <varlistentry>
          <term><guilabel>Completion command</guilabel></term>
          <listitem>
            <para>A shell command to execute after the image has been saved. The following environment variables will be set:</para>
            <variablelist>
              <varlistentry>
                <term><varname>$SCREENSHOT_PATH</varname></term>
                <listitem>
                  <para>The fully qualified filename of the saved image, e.&nbsp;g. <filename>/home/my/shots/image2.jpg</filename></para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term><varname>$CHANNEL_ALIAS</varname></term>
                <listitem>
                  <para>Name of the current channel, &eg; BBC1</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term><varname>$CHANNEL_ID</varname></term>
                <listitem>
                  <para>RF channel name, &eg; S02</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term><varname>$CURRENT_STANDARD</varname></term>
                <listitem>
                  <para>Video standard (PAL, NTSC, SECAM, &hellip;)</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term><varname>$CURRENT_INPUT</varname></term>
                <listitem>
                  <para>Current video input on the TV card</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><guilabel>Skip x pictures before grabbing</guilabel></term>
          <listitem>
            <para></para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term><guilabel>Grab on clicking ok</guilabel></term>
          <listitem>
            <para>By default a screenshot is taken when you open the screenshot dialog. When this option is selected, it will be taken when you click the <guibutton>OK</guibutton> button of the dialog.</para>
          </listitem>
        </varlistentry>	 
        <varlistentry>
          <term><guilabel>Add toolbar button</guilabel></term>
          <listitem>
            <para>Add a button to the main window toolbar which opens the screenshot dialog.</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </sect2>

    <sect2 id="zapping-settings-deinterlace">
      <title>Deinterlace plugin</title>

      <para>Zapping has a deinterlace plugin based on code from the Windows TV application DScaler. Currently deinterlacing is only possible with Video4Linux2 drivers on x86 CPUs with MMX. In this section you can customize the plugin. To enable deinterlacing choose a method from the top menu list:</para>
      <variablelist>
        <varlistentry>
          <term>Video Deinterlace (Bob)</term>
          <listitem>
            <para>This method is based on Gunnar Thalin's VirtualDub filter. If it detects weaving artifacts in the current image it uses bob to get rid of them. This method has a tendency to bob rather too much and gives poor results on fine static images. It uses the most recent two frames for the calculations and is not as CPU intensive as the more recent Greedy methods. Options:</para>
            <variablelist>
              <varlistentry>
                <term>Resolution</term>
                <listitem>
                  <para>Horizontal resolution of images. Choosing a lower resolution may help if your CPU is too slow. This option is available for all methods.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>Weave Edge Detect</term>
                <listitem>
                  <para>Weight used to help detect edges. Higher values makes edge detection stronger.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>Weave Jaggie Threshold</term>
                <listitem>
                  <para>Threshold used to determone if pixel should be bobed.  Higher values mean fewer bobed pixels.</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Video Deinterlace (Weave)</term>
          <listitem>
            <para>This was one of the earliest video deinterlace methods. It used three fields in the calculation and works well on slow moving material but tends to comb on fast moving material.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Video Deinterlace (2-Frame)</term>
          <listitem>
            <para>This method uses the current frame and the last two to determine whether to bob or weave a given pixel. This gives better results on both stationary and moving images than the above two methods however it uses more CPU.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Simple Weave</term>
          <listitem>
            <para>This method just combines the most recent even and odd fields. This causes motion artifacts and is provided for comparison. <!-- This method can also be used as part of the adaptive method with static images. --></para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Simple Bob</term>
          <listitem>
            <para>This uses only the most recent field and fills the lines in between with interpolated pixels. This method has in may ways been superceded by Scaler Bob.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Scaler Bob</term>
          <listitem>
            <para>Uses the current field and lets the video card scaler size the picture to fit the screen. Produces reasonable results for fast moving images. This method uses very little CPU and is recommended on lower spec machines.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Even Scanlines Only</term>
          <listitem>
            <para>This method displays only the even fields and uses hardware scaling. It reduces bob artifacts at the cost of loss of information. This method was originally intended to be used with game consoles.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Odd Scanlines Only</term>
          <listitem>
            <para>Like Even Scanlines Only, but displays only odd fields.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Blended Clip</term>
          <listitem>
            <para>This method is designed mostly for experimentation by those interested in what works for video deinterlacing. It is probably not the single best method for anything but it can be used to create custom deinterlace methods for special purposes. Somewhat CPU intensive</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Video (Greedy, Low Motion)</term>
          <listitem>
            <para>The Greedy Low Motion deinterlace method is designed to give good results on low motion video source, using less CPU than some others. Good on slower machines but it will give awful results on high motion video material like sports. Quite by accident, it can also do a decent job on poorly mastered 3:2 or 2:2 pull down film source material like some anime movies, regardless of low or high motion.</para>
            <!-- Try it if you have a movie source that is not giving good results with normal Auto Pull Down processing. -->
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Video (Greedy, High Motion)</term>
          <listitem>
            <para>This method works at two levels. By default, at the Basic Level, it is a normal deinterlace method, with the following features:</para>
            <simplelist>
              <member>A merge of Blended Clip, Greedy Low Motion, and some new stuff</member>
              <member>Greedy implied pulldown, like the Greedy Low Motion method</member>
              <member>Parm blending like the Blended Clip method, for less sizzling.</member>
              <member>Lookahead motion detection</member>
              <member>Diagonal Jaggie Reduction to smooth out the stair step effect in moving diagonal lines. This is accomplish by horizontally smoothing only the rapidly moving pixels, leaving the stationary ones alone. If a diagonal edge is not moving then it won't be jagged anyway under Greedy High Motion.</member>
              <member>Slider adjustments for Max Comb, Motion Threshold, and Motion Sensitivity. However the defaults should be okay for most cases.</member>
            </simplelist>
            <para>Basic Level is compatible with all MMX, Pentium II, AMD K6-II, K6-III, Celeron and above machines. Performance will probably be about that of the Greedy 2-Frame method.</para>
            <para>There is also an Advanced Level (experimental) which is invoked if you check any of the boxes in the panel. A machine supporting the Intel SSE instruction set is needed. The Advanced options should run on Athlons, Intel P-III, P4, and the faster Celerons.</para>
            <!-- When using the Advanced Features Greedy (HM) maintains its own internal history of the last 4 video input fields. This means it must be able to examine every field and you can't use it at the same time as DScaler's regular Auto_Pulldown option. So if you are going to use the advanced options, please first be sure the Settings/Deinterlace/Auto_Pulldown option is not checked. -->
            <para>Using the Advanced Options is <!-- also --> very sensitive to machine performance and dropped frames, so you may have to lower your Resolution if you get jerkiness. <!-- It's also best to have Hurry_When_Late=0 in the DScaler.ini file. --></para>
            <para>The new check box enabled features are:</para>
            <simplelist>
              <member>Built in 3:2, 2:2, and n:m Pulldown. This does pulldown matching, not removal, so all frames are displayed. I think this eventually will work better with video overlays and live TV viewing that is extensively edited, but it still needs improvement.</member>
              <member>In-Between Frames. This gives judder reduction for those of us with fixed 60 HZ RTPV's. In a 3:2 pulldown situation it will select an appropriate pair of fields to average once out of every 5 frames. This can effectively display every new input frame 2 1/ 2 times. It will cause a small amount of motion blur every fifth frame but I personally leave it turned on all the time now for a smoother film picture sequence. It will also work with 2:2 pulldown (I think) but there one half of the frames will be averaged and the motion blur may not be acceptable.</member>
              <member>Adjustable Edge Enhancement. This is due to an idea posted by this forum's MR. Wigggles. It enhances only a small amount, on the horizontal axis. When turned on you can use a slider to adjust it.</member>
              <member>Adjustable Median Filter. Also due to Mr. Wigggles, this can help filter noise. However if set over about 3-5 it will also cause motion artifacts on fast moving scenes. Also has a slider.</member>
              <member>Vertical Filter. This is a post-deinterlace software vertical filter that can remove both noise and some leftover deinterlace artifacts. It gives results similar to the hardware version available on the Advanced Video Flags screen, but not so extreme and without the jitter.</member>
            </simplelist>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Greedy 2 Frame</term>
          <listitem>
            <para>This method tries to combine the best features of the 2-frame algorithm with the looking ahead ability of the greedy method. I find this methods works well on sports and other high motion material. With static images and low quality sources there may be unacceptable levels of bobbing. This method uses four fields and has a configuarable motion detect. Motion is detected on a two pixel basis. This is the current default method for faster processors as it gives the best all round performance. Options:</para>
            <variablelist>
              <varlistentry>
                <term>Greedy 2 Frame Luma Threshold</term>
                <listitem>
                  <para>Luma differences above this will be interpreted as movement.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>Greedy 2 Frame Chroma Threshold</term>
                <listitem>
                  <para>Chroma differences above this will be interpreted as movement.</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Video (TomsMoComp)</term>
          <listitem>
            <para>This method is the latest and greatest method from Tom Barry. This new method improves on some of the older methods in two important ways. Where there is motion, the bob pixels are generated by looking along a series of diagonals as well as simple the ones above and below. Also when there is motion the code will try and spot slowly moving objects and will try and maintain the detail on those objects. The combined effect of these two searches is a big jump in picture quality and also a big jump in CPU usage. A 1 GHz CPU is required to use this method. Options:</para>
            <variablelist>
              <varlistentry>
                <term>Search Effort</term>
                <listitem>
                  <para>This setting controls how much CPU is used by the method by controlling how big an area the method will search looking for matches. A Search effort (SE) of 0 means that all pixels are smart bobbed and is not recommended. SE = 1 does no motion compensation, but doesn benefit from the diagonal bob interpolation. SE > 1 starts to do true MoComp with increasing CPU demands. You should use the highest value that allows you to run any other filters etc without dropped frames.</para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term>Use Strange Bob</term>
                <listitem>
                  <para>This was some test code added by John Adcock to try and reduce the number of errors in the diagonal searches. It is not recommended.</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Video (MoComp2)</term>
          <listitem>
            <para>This is a new method that should be considered a work in progress. At the moment it is a motion adaptive method with diagonal interpolation based on: T. Chen, H.R. Wu; &amp; Z.H. Yu, "Efficient deinterlacing algorithm using edge-based line average interpolation" Optical Engineering, Volume 39, Issue 8, (2000). This method also incorporates built in chroma smoothing to help disguise MPEG chroma problems.</para>
            <para>The method should be a general use one but at the moment most consider TomsMoComp to give a better picture. As this method uses less CPU than TomsMoComp it may be well suited to those who run a lot of filters. Note the built in chroma smoother means that this method may give better results with digital sourced material such as DVD or DVB.</para>
          </listitem>
        </varlistentry>

      </variablelist>

    </sect2>

  </sect1>

  <!--
Local Variables:
mode: sgml
coding: utf-8
sgml-parent-document: "zapping.xml"
indent-tabs-mode: nil
End:
  -->
