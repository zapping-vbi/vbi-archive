VBI decoding library. Based on code from AleVT 1.6.0
Copyright (C) 1998,1999 Edgar Toernig (froese@gmx.de)
but most of the current code is rewritten from scratch.

Documentation to be done.

ROADMAP
=======

libvbi.h
	Public interface.

Driver interface:

v4lx.c, v4lx.h
	Video4Linux / Video4Linux2 interface; Uses raw vbi decoder,
	output arrays of vbi lines of sliced data in fifo buffer
	containers (for multiple consumers, eg. Zapzilla, subtitle
	recording, PDC/VPS decoder).
decoder.c, decoder.h
	General purpose raw vbi decoder, converts raw to sliced vbi
	data.
sliced.h
	Definition of sliced data object.

Data service decoder:

vbi.c, vbi.h
        Decoder main file; Maintains vbi decoding context (struct
        vbi), hosts the decoding mainloop, an independent thread.
	The thread reads sliced data from a fifo (eg. driver
        interface, LAN,	file playback) and calls the respective
	specialized decoders for Teletext, Closed Caption, XDS, VPS
	and WSS. Clients are notified of decoded data by means of events
	(callbacks), also managed here. Finally the Wide Screen
	Signalling decoders.
packet.c, vt.h
	Teletext and VPS decoder; Assembles Teletext pages (struct
	vt_page, raw data not for public consumption) and stores them
	in the page cache. Extracts other information transmitted as
	Teletext packets (PDC, URL triggers etc).
cache.c, cache.h
	Teletext page cache.
caption.c, cc.h
	Closed Caption and XDS decoder; Maintains a caption context
	(8 pages ~ streams CC 1..4, Text 1..4) and interprets caption
	text and commands, ie. caption pages are formatted (struct
	fmt_page) on the fly.
hamm.c, hamm.h
	Error correction tables and functions, eg. parity check.
trigger.c, trigger.h
	Decodes and maintains EACEM and ATVEF URL triggers extracted
	from Teletext and Closed Caption data.
tables.c, tables.h
	Miscellaneous decoding tables, most notable EBU country and
	network identifiers.

Output:

teletext.c
	Formats a Teletext page in cache (ev. using enhancement data
	on various other pages), creates and resolves links (TOP, FLOF,
	page numbers, URLs etc). Closed Caption pages are formatted in
	caption.c.
format.h
	Defines the unified structure holding a formatted page (struct
	fmt_page).
lang.c, lang.h
	Translates between the Teletext / Closed Caption character
	sets visible in fmt_page and Unicode, for export modules and
	search.c.
search.c
	Functions to search the Teletext page cache, returns a
	formatted page on success.
export.c, export.h
	Interface to formatted page export modules. Note this can
	write to a file or an open fp, eg. memory.
exp_txt.c
	Write formatted page as ASCII or ANSI text,
exp_html.c
	as HTML page,
exp_vtx.c
	in VideoteXt format. (This is an exception in that VTX stores
	raw Level 1.0 pages which can be hardly reconstructed from a
	fmt_page. So the corresponding source is fetched from cache.)
exp_templ.c
	Template for export modules.
exp_gfx.c
	PPM, PNG export and raw rendering of formatted pages, as used
	by Zapzilla to display pages on screen. This is low-level.
	Scaling, overlay and Close Caption gradual updates are done
	by Zapzilla code.
wstfont.xpm, ccfont.xpm
	Font images used by exp_gfx.c.

Test files:
samples
vbi_decoder.c
shaped_caption.c
caption.c (-DTEST=1)
