Known bugs in Zapping, don't report them
----------------------------------------

* Recording plugin: newly configured format doesn't
  appear in recording window on clicking ok.
* Recording: on start hangs and/or causes xlib error.
* Recording: stop hangs.
* Where's the fscking mute button?
* Cursor keys don't work in TTX child window. 
* TTX mode, channel switch in ch editor,
  SEGV in vbi_draw_vt_page_region
* Edited channels, clicked ok, tc==NULL in tuned_channel_nth_name().
* V4L2 (0.20 and 2.5) RGB pixel formats are incorrectly defined.
  Gerd Knorr notified, solution pending. Workaround is in place.
* tvengxv (pm2, not v4l) lists no standards and inputs.
* Pointer does not properly reappear in windowed mode.
* zvbi error messages need locale to UTF-8 conversion.
* Go Fullscreen w/automatic vidmode hangs on RH
* ** (zapping:14562): WARNING **: Group Allgemeine Optionen not found
  in the properties
* Subtitle overlay must be restored.
* TTXView window size issues.
* TTXView main menu quit (commented out) keeps crashing.
* App specific toolbar_style is pointless. Gnome can already
  handle that for us, see gnome-app-helper.c. Or right click
  on the toolbar dock bevel. Note also Ctrl-Cursor to move
  the toolbar around.
* TTX search: on the fly case and regex change doesnt work.
* Wrong window stacking layer of overlay window when
  Zapping restores no-xv fullscreen at startup.
* (Zapping 0.6.7) Saving QVC-600 TTX page in HTML segfaults.
* Station search doesn't work in overlay mode
  (Xv/v4l no signal strength), need check/switch.
- In capture mode window resizing flickers.
* fprintf_ioctl dereferences uninitialized strings.
* Need to handle BadAtom errors resulting from Xv out
  of video memory (or no v4l device?). Currently gdk
  just aborts the app.
* Need better no-overlay-present handling.
* Capture won't work under PPC (endianess)
* Look for endianness problems.
* vbi eats too much CPU, investigate.
~ Zapzilla: Calls fetch_page more often than necessary,
  investigate.
* Zapzilla: what's v4lx doing on standard change?
  Changing the video standard breaks vbi decoding.
* Overlay (no XVideo) under E is broken, shading the window
  isn't correctly detected.
* Do not assert on ESD timeout
* Bug in save window geometry, reported by Pawel.
* Subtitles: auto-overlays search result pages.
* config.h is also full of hardcoded paths.
* Spinslider minimum sizes.
* Bad reception breaks vbi decoding: i/o error.
* Closing the main window while recording blocks.
  Backtrace:
  on_exit2_activate() [now quit_cmd()]
  UpdateCoords()
  zmisc_switch_mode(TVENG_NO_CAPTURE, main_info)
    shuts down capturing before calling
    plugin_close to stop recording, not good.
  muted = tveng_get_mute(info)
  TVLOCK
  Lock history:
  <capture thread>
  TVLOCK   in tveng_mutex_lock 545034 usec
  TVLOCK   in tveng_read_frame 545069 <--------+ note
  <main thread>				       |
  TVLOCK   in tveng_get_mute 559419 <- blocks  |
  <capture thread>			       |
  UNTVLOCK in tveng_read_frame 575256 <--------+
  TVLOCK   in tveng_get_timestamp 575334
  UNTVLOCK in tveng_get_timestamp 575365
  UNTVLOCK in tveng_mutex_unlock 575393 <-+ unlocked
  TVLOCK   in tveng_mutex_lock 575463   <-+
    lock/unlock does not reschedule when
           another thread waits?
  TVLOCK   in tveng_read_frame 575498
  UNTVLOCK in tveng_read_frame 624955
  TVLOCK   in tveng_get_timestamp 625037
  UNTVLOCK in tveng_get_timestamp 625068
  UNTVLOCK in tveng_mutex_unlock 625097
  TVLOCK   in tveng_mutex_lock 625163
  TVLOCK   in tveng_read_frame 625197
   :

XFree86 stuff
-------------

* XvQueryAdaptors seems to report wrong num_formats value, maybe a
  DIX or DDX bug.
* XvListImageFormats, XvQueryPortAttributes not documented. Result
  must be XFree()ed.
* XvImageFormat: Some drivers define incorrect component_order.
  There are no Window FOURCCs for RGB formats, consequently drivers
  disagree about id and guid.

V4L XVideo driver (xc/programs/Xserver/hw/xfree86/drivers/v4l/v4l.c)
* Success of ioctls is not checked.
* Does not consider audio.mode changes semantics on read/write.
  V4lSetPortAttribute():
    } else if (attribute == xvMute ||
	       attribute == xvVolume) {
	ioctl(V4L_FD,VIDIOCGAUDIO,&pPPriv->audio);
	if (attribute == xvMute) {
	    if (value)
		pPPriv->audio.flags |= VIDEO_AUDIO_MUTE;
	    else
		pPPriv->audio.flags &= ~VIDEO_AUDIO_MUTE;
	} else if (attribute == xvVolume) {
	    if (pPPriv->audio.flags & VIDEO_AUDIO_VOLUME)
		pPPriv->audio.volume = xv_to_v4l(value);
	} else {
	    ret = BadValue;
	}
	if (ret != BadValue)
	    if (-1 == ioctl(V4L_FD,VIDIOCSAUDIO,&pPPriv->audio))
		perror("ioctl VIDIOCSAUDIO");
* Encoding is not reset on open? Apparently cought when Zapping opens
  the v4l/2/5 interface too (try remove the modules in tveng.c, or
  start xv overlay while a radio app runs).
* Reports wrong tuner frequency range:
  static const XF86AttributeRec FreqAttr =
    {XvSettable | XvGettable,     0, 16*1000, XV_FREQ};
* Ignores tuner frequency scale factor (62.5 Hz, 62.5 kHz). Supposedly
  the Hz scale was added for SW radio, but the V4L/2 spec nowhere says
  tv receivers must support kHz only.
  V4lSetPortAttribute():
  } else if (attribute == xvFreq) {
      if (-1 == ioctl(V4L_FD,VIDIOCSFREQ,&value))
          perror("ioctl VIDIOCSFREQ");
  V4lGetPortAttribute():
  } else if (attribute == xvFreq) {
     ioctl(V4L_FD,VIDIOCGFREQ,value);
* XV_FREQ semantics not documented, e.g. scale 62.5 kHz.
* XvEncodingInfo does not report if the input is a tuner and
  XV_FREQ access appears to succeed on all inputs.

NVidia driver (binary, not xf86)
* Reports tv output port with type XvInputMask | XvVideoMask.
  Should be XvOutputMask.

NeoMagic driver (xc/programs/Xserver/hw/xfree86/drivers/neomagic)
* The only port is of type XvInputMask | XvImageMask | XvWindowMask |
  XvOutputMask | XvVideoMask. It supports PutVideo (video in) and
  PutImage (image out), probably not both at once. XvQueryAdaptors man
  page does not state if such a combination of flags has to be
  expected. Actually it doesn't even mention the XvImage extension.

Savage driver (xc/programs/Xserver/hw/xfree86/drivers/savage/savage_video.c)
* Minor nit: comment says YV12, I420 == 4:1:1, actually 4:2:0. The
  alleged 2:1:1 is really a half width 4:2:2, there's no such thing as 2:1:1.
