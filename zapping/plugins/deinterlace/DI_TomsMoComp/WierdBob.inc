		
"		## First, get and save our possible Bob values\n"
"		## Assume our pixels are layed out as follows with x the calc'd bob value\n"
"		## and the other pixels are from the current field\n"
"		##  \n"
"		##		  j a b c k		current field\n"
"		##            x			calculated line\n"
"		##        m d e f n		current field\n"
"		##\n"
"		## we calc the bob value as:\n"
"		##		x2 = either avg(a,f), avg(c,d), avg(b,e), avg(j,n), or avg(k,m)\n"
"		 \n"
"		## selected for the	smallest of abs(a,f), abs(c,d), or abs(b,e), etc.\n"
"\n"
"		## a,f\n"
"		movq    mm0, qword ptr[ebx-2]		## value a from top left		\n"
"		movq    mm1, qword ptr[ebx+ecx+2]	## value f from bottom right			\n"
"		movq	mm6, mm0					\n"
"##		pavgb	mm6, mm1					## avg(a,f), also best so far\n"
		V_PAVGB (mm6, mm1, mm7, ShiftMask)	// avg(a,f), also best so far
"		movq	mm7, mm0\n"
"		psubusb	mm7, mm1\n"
"		psubusb mm1, mm0\n"
"		por		mm7, mm1					## abs diff, also best so far\n"
"\n"
"		## c,d\n"
"		movq    mm0, qword ptr[ebx+2]		## value a from top left		\n"
"		movq    mm1, qword ptr[ebx+ecx-2]	## value f from bottom right			\n"
"		movq	mm2, mm0						\n"
"##		pavgb	mm2, mm1					## avg(c,d)\n"
		V_PAVGB (mm2, mm1, mm3, ShiftMask)	// avg(c,d)
"		movq	mm3, mm0\n"
"		psubusb	mm3, mm1\n"
"		psubusb mm1, mm0\n"
"		por		mm3, mm1					## abs(c,d)\n"
"		movq	mm1, mm3					## keep copy\n"
"\n"
"		psubusb mm3, mm7			## nonzero where new weights bigger, else 0\n"
"		pxor	mm4, mm4\n"
"		pcmpeqb mm3, mm4			## now ff where new better, else 00	\n"
"		pcmpeqb	mm4, mm3			## here ff where old better, else 00\n"
"\n"
"		pand	mm1, mm3			## keep only better new avg and abs\n"
"		pand	mm2, mm3\n"
"\n"
"		pand	mm6, mm4\n"
"		pand    mm7, mm4\n"
"\n"
"		por		mm6, mm2			## and merge new & old vals keeping best\n"
"		por		mm7, mm1\n"
"		por		mm7, UVMask			## but we know chroma is worthless so far\n"
"		pand	mm5, YMask			## mask out chroma from here also\n"
"\n"
"		## j,n\n"
"		movq    mm0, qword ptr[ebx-4]		## value j from top left		\n"
"		movq    mm1, qword ptr[ebx+ecx+4]	## value n from bottom right			\n"
"		movq	mm2, mm0						\n"
"##		pavgb	mm2, mm1					## avg(j,n)\n"
		V_PAVGB (mm2, mm1, mm3, ShiftMask)	// avg(j,n)
"		movq	mm3, mm0\n"
"		psubusb	mm3, mm1\n"
"		psubusb mm1, mm0\n"
"		por		mm3, mm1					## abs(j-n)\n"
"		movq	mm1, mm3					## keep copy\n"
"\n"
"		psubusb mm3, mm7			## nonzero where new weights bigger, else 0\n"
"		pxor	mm4, mm4\n"
"		pcmpeqb mm3, mm4			## now ff where new better, else 00	\n"
"		pcmpeqb	mm4, mm3			## here ff where old better, else 00\n"
"\n"
"		pand	mm1, mm3			## keep only better new avg and abs\n"
"		pand	mm3, mm2\n"
"\n"
"		pand	mm6, mm4\n"
"		pand    mm7, mm4\n"
"\n"
"		por		mm6, mm3			## and merge new & old vals keeping best\n"
"		por		mm7, mm1			## \n"
"\n"
"		## k, m\n"
"		movq    mm0, qword ptr[ebx+4]		## value k from top right		\n"
"		movq    mm1, qword ptr[ebx+ecx-4]	## value n from bottom left			\n"
"		movq	mm4, mm0						\n"
"##		pavgb	mm4, mm1					## avg(k,m)\n"
		V_PAVGB (mm4, mm1, mm3, ShiftMask)	// avg(k,m)
"\n"
"		movq	mm3, mm0\n"
"		psubusb	mm3, mm1\n"
"		psubusb mm1, mm0\n"
"		por		mm3, mm1					## abs(k,m)\n"
"		movq	mm1, mm3					## keep copy\n"
"\n"
"		movq	mm2, mm4			## avg(k,m)\n"
"\n"
"		psubusb mm3, mm7			## nonzero where new weights bigger, else 0\n"
"		pxor	mm4, mm4\n"
"		pcmpeqb mm3, mm4			## now ff where new better, else 00	\n"
"		pcmpeqb	mm4, mm3			## here ff where old better, else 00\n"
"\n"
"		pand	mm1, mm3			## keep only better new avg and abs\n"
"		pand	mm3, mm2\n"
"\n"
"		pand	mm6, mm4\n"
"		pand    mm7, mm4\n"
"\n"
"		por		mm6, mm3			## and merge new & old vals keeping best\n"
"		por		mm7, mm1			## \n"
"\n"
"		## b,e\n"
"		movq    mm0, qword ptr[ebx]		## value b from top 		\n"
"		movq    mm1, qword ptr[ebx+ecx]	## value e from bottom \n"
"\n"
"## We will also calc here the max/min values to later limit comb\n"
"## so the max excursion will not exceed the Max_Comb constant\n"
"\n"
#ifdef SKIP_SEARCH		
"		movq	mm2, mm0\n"
"##		pminub	mm2, mm1\n"
		V_PMINUB (mm2, mm1, mm4)
"\n"
"##		pmaxub	mm6, mm2			## clip our current results so far to be above this\n"
		V_PMAXUB (mm6, mm2)
"		movq	mm2, mm0\n"
		V_PMAXUB (mm2, mm1)
"##		pminub	mm6, mm2			## clip our current results so far to be below this\n"
		V_PMINUB (mm6, mm2, mm4)
"\n"
#else
"		movq	mm2, mm0\n"
"		movq	mm4, qword ptr[eax]\n"
"		psubusb mm2, mm4\n"
"		psubusb mm4, mm0\n"
"		por		mm4, mm2			## abs diff\n"
"		\n"
"		movq	mm2, mm1\n"
"		movq	mm3, qword ptr[eax+ecx]\n"
"		psubusb mm2, mm3\n"
"		psubusb mm3, mm1\n"
"		por		mm3, mm2			## abs diff\n"
"##		pmaxub  mm3, mm4			## top or bottom pixel moved most\n"
		V_PMAXUB (mm3, mm4)			// top or bottom pixel moved most
"		psubusb mm3, Max_Mov		## moved more than allowed? or goes to 0?\n"
"		pxor	mm4, mm4\n"
"		pcmpeqb mm3, mm4			## now ff where low motion, else high motion\n"
"		\n"
"		movq	mm2, mm0\n"
"##		pminub	mm2, mm1\n"
		V_PMINUB (mm2, mm1, mm4)
"\n"
"##		pmaxub	mm6, mm2			## clip our current results so far to be above this\n"
		V_PMAXUB (mm6, mm2)
"\n"
"		psubusb mm2, mm3			## maybe decrease it to 0000.. if no surround motion\n"
"		movq	%[Min_Vals], mm2\n"
"\n"
"		movq	mm2, mm0\n"
		V_PMAXUB (mm2, mm1)
"##		pminub	mm6, mm2			## clip our current results so far to be below this\n"
		V_PMINUB (mm6, mm2, mm4)
"		paddusb mm2, mm3			## maybe increase it to ffffff if no surround motion\n"
"		movq	%[Max_Vals], mm2\n"
#endif
"			\n"
"		movq	mm2, mm0						\n"
"##		pavgb	mm2, mm1					## avg(b,e)\n"
		V_PAVGB (mm2, mm1, mm3, ShiftMask)	// avg(b,e)
"				\n"
"		movq	mm3, mm0\n"
"		psubusb	mm3, mm1\n"
"		psubusb mm1, mm0\n"
"		por		mm3, mm1			## abs(c,d)\n"
"		movq	mm1, mm3			## keep copy of diffs\n"
"\n"
"		pxor	mm4, mm4			\n"
"		psubusb mm3, mm7			## nonzero where new weights bigger, else 0\n"
"		pcmpeqb mm3, mm4			## now ff where new better, else 00	\n"
"		pcmpeqb	mm4, mm3			## here ff where old better, else 00\n"
"\n"
"		pand	mm1, mm3\n"
"		pand	mm2, mm3\n"
"\n"
"		pand    mm6, mm4\n"
"		pand    mm7, mm4\n"
"\n"
"		por		mm6, mm2			## our x2 value\n"
"		por		mm7, mm1			## our x2 diffs\n"
"		movq	mm4, mm7			## save as bob uncertainty indicator\n"

