dnl Process this file with autoconf to produce a configure script.
dnl $Id: configure.in,v 1.32 2001-07-26 05:41:31 mschimek Exp $

AC_INIT(configure.in)
AM_INIT_AUTOMAKE(mp1e, 1.9pre2)
AM_CONFIG_HEADER(config.h)

AM_PROG_LIBTOOL

test -e site_def.h || cat <<EOF >site_def.h
/* Site specific definitions */

#ifndef SITE_DEF_H
#define SITE_DEF_H
#if 1 /* EXISTS */
#endif /* EXISTS */
#endif /* SITE_DEF_H */
EOF

dnl No more duplicates in the CVS, make dist will follow these links
COMMON=../../../common
for i in list.h fifo.h fifo.c threads.h videodev.h videodev2.h; do
	test -e common/$i || {
		test -f $COMMON/$i || {
			echo "Mp1e needs files from the Zapping CVS tree at" $COMMON
			echo "which is available from http://zapping.sourceforge.net."
			echo "Sorry for the inconvenience."
			exit 1
		}
		echo "creating link for" common/$i
		dnl absolute path because make dist moves the tree
		ln -s `cd $COMMON; pwd; cd - >/dev/null`/$i common/$i || exit 1
	}
done

VBILIB=../../../libvbi
for i in decoder.h decoder.c hamm.h hamm.c sliced.h tables.h tables.c v4lx.h v4lx.c; do
	test -e vbi/$i || {
		test -f $VBILIB/$i || {
			echo "Mp1e needs files from the Zapping CVS tree at" $VBILIB
			echo "which is available from http://zapping.sourceforge.net."
			echo "Sorry for the inconvenience."
			exit 1
		}
		echo "creating link for" vbi/$i
		dnl absolute path because make dist moves the tree
		ln -s `cd $VBILIB; pwd; cd - >/dev/null`/$i vbi/$i || exit 1
	}
done

dnl Use this in the final release, debugging info until then
dnl CFLAGS="-Wall -O2 -fomit-frame-pointer"
CFLAGS="-Wall -O2 -g -fomit-frame-pointer"

case "$host_alias" in
i?86-*)
	case "$host_alias" in
		i686-*)
			CFLAGS="$CFLAGS";;
dnl			CFLAGS="$CFLAGS -march=pentiumpro";;
	esac;;
*) ;;
esac

AC_PROG_CC

AC_CHECK_FUNCS(memalign)

AC_DEFINE(ENABLE_V4L, 1, [For Z/VBI])
AC_DEFINE(NO_TVENG_H, 1, [For Z/VBI])

AC_MSG_CHECKING([whether 'as' supports SSE2])
use_sse2=no
AC_TRY_COMPILE(, [
int main(void) {
  __asm__ __volatile__ (" mo4vdqu 0,%xmm0\n");
  return 0;
}],
[AC_DEFINE(USE_SSE2, 1, [Define if 'as' supports SSE2])
use_sse2=yes])
AC_MSG_RESULT($use_sse2)
AM_CONDITIONAL(USE_SSE2, test x$use_sse2 = xyes)

dnl
dnl ALSA support (libasound)
dnl
AC_CHECK_HEADER(sys/asoundlib.h,
	AC_CHECK_LIB(asound, main))

dnl
dnl Audio File library (libaudiofile)
dnl for audio compression from WAV etc
dnl
AC_CHECK_HEADER(audiofile.h,
	AC_CHECK_LIB(audiofile, afSetVirtualSampleFormat))

dnl
dnl EoundD support
dnl
AC_MSG_CHECKING(for EsounD)
ESD_VERSION=`esd-config --version`
if test $? -eq 0; then
	AC_MSG_RESULT($ESD_VERSION)
	ESD_LIBS=`esd-config --libs`
	AC_SUBST(ESD_LIBS)
	AC_DEFINE(USE_ESD, 1, [Define if you have ESD.])
else
	AC_MSG_RESULT([no, ESD won't be used])
fi

dnl
dnl XVideo support (libxv)
dnl for preview
dnl
AC_PATH_XTRA
AC_CHECK_LIB(Xv, XvShmPutImage, HAVE_XV="yes",, $X_LIBS -lX11 -lXext)

dnl
dnl Easter eggs
dnl

AC_ARG_ENABLE(test,[  --enable-test           enable test gui])
if test "$enable_test" = "yes"; then
if test "$HAVE_XV" = "yes"; then
	GTK_LIBS="`gtk-config --libs` -lXv -lXext"
	GTK_CFLAGS=`gtk-config --cflags`
	AC_SUBST(GTK_CFLAGS)
	AC_SUBST(GTK_LIBS)
	AC_DEFINE(TEST_PREVIEW, 1, [Define to compile preview.])
	AC_DEFINE(HAVE_LIBXV, 1, [Define if you have the XVideo library (-lxv).])
fi
fi

AC_OUTPUT([
Makefile
video/Makefile
audio/Makefile
vbi/Makefile
systems/Makefile
common/Makefile
test/Makefile
mp1e.lsm
mp1e.spec
])
