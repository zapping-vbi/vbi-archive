dnl Process this file with autoconf to produce a configure script.
dnl $Id: configure.in,v 1.9 2001-12-09 22:10:51 garetxe Exp $

AC_INIT(configure.in)
RTE_VERSION_MAJOR=0
RTE_VERSION_MINOR=5
RTE_VERSION_MICRO=0
AC_SUBST(RTE_VERSION_MAJOR)
AC_SUBST(RTE_VERSION_MINOR)
AC_SUBST(RTE_VERSION_MICRO)
AM_INIT_AUTOMAKE(rte, $RTE_VERSION_MAJOR.$RTE_VERSION_MINOR.$RTE_VERSION_MICRO)
AM_CONFIG_HEADER(config.h)

AM_ACLOCAL_INCLUDE(macros)

AC_PROG_CC

dnl for automake 1.5
AS=$CC
AC_SUBST(AS)
AC_SUBST(ASFLAGS)

dnl Stupid rpm in SuSE
CFLAGS="-g -O2 -Wall -fomit-frame-pointer"

AM_PROG_LIBTOOL

test -e site_def.h || cat <<EOF >site_def.h
/* Site specific definitions */

#ifndef SITE_DEF_H
#define SITE_DEF_H
#if 1 /* EXISTS */
#endif /* EXISTS */
#endif /* SITE_DEF_H */
EOF

AC_CHECK_HEADER(linux/soundcard.h,AC_DEFINE(OSS, 1,
					    [Define if you have linux/soundcard.h]))

AC_MSG_CHECKING(for EsounD)
ESD_VERSION=`esd-config --version`
if test $? -eq 0; then
	AC_MSG_RESULT($ESD_VERSION)
	ESD_LIBS=`esd-config --libs`
	ESD_CFLAGS=`esd-config --cflags`
	AC_SUBST(ESD_CFLAGS)
	AC_SUBST(ESD_LIBS)
	AC_DEFINE(USE_ESD, 1, [Define if you have ESD.])
else
	AC_MSG_RESULT([no, ESD won't be used])
fi

dnl Build docs from the sources automagically if gtkdoc is available.
GTK_DOC_CHECK

dnl Short term plan is to have these three available
BACKEND_FFMPEG=no
BACKEND_MP1E=no
BACKEND_DIVX4LINUX=no

AM_CONDITIONAL(BACKEND_FFMPEG, test "x$BACKEND_FFMPEG" = "xyes")
AM_CONDITIONAL(BACKEND_MP1E, test "x$BACKEND_MP1E" = "xyes")
AM_CONDITIONAL(BACKEND_DIVX4LINUX, test "x$BACKEND_DIVX4LINUX" = "xyes")

dnl Check whether program_invocation_name exists, GNU extension
AC_CHECK_FUNCS(program_invocation_name)

AC_OUTPUT([
Makefile
docs/Makefile
src/Makefile
src/rte-version.h
test/Makefile
rte.spec
])

echo "
	Backend			Build		
	-------			-----
	mp1e			$BACKEND_MP1E
	ffmpeg			$BACKEND_FFMPEG
	divx4linux		$BACKEND_DIVX4LINUX
"
