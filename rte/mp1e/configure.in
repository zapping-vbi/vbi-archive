dnl Process this file with autoconf to produce a configure script.

AC_REVISION($Id: configure.in,v 1.18 2002-06-12 03:59:06 mschimek Exp $)

AC_INIT(configure.in)
AM_INIT_AUTOMAKE(mp1e, 1.9.3)
AM_CONFIG_HEADER(config.h)
AM_ACLOCAL_INCLUDE(macros)

test "x`echo $CFLAGS | grep -e -g`" != "x" && CFLAGS="$CFLAGS -O0"
dnl -fomit is neccessary to free enough regs for some inline asm
CFLAGS="-O2 -fomit-frame-pointer $CFLAGS"

AC_PROG_CC
AM_PROG_AS

dnl libtool is used to build a shared lib mp1e backend for rte.
dnl command line mp1e needs only the static libs for linking
dnl which saves compile time.
AC_DISABLE_SHARED
AC_PROG_LIBTOOL

AM_CONDITIONAL(BACKEND_MP1E, test 0=1)

test -e site_def.h || cat <<EOF >site_def.h
/* Site specific definitions */

#ifndef SITE_DEF_H
#define SITE_DEF_H
#endif /* SITE_DEF_H */
EOF

create_links () {
	for i in $3; do
		test -e $2/$i || {
			test -f $1/$i || {
				echo "$1/$i not found, abort."
				exit 1
			}
			echo "creating link for" $2/$i
			dnl absolute path because make dist moves the tree
			ln -s `cd $1; pwd; cd - >/dev/null`/$i $2/$i || exit 1
		}
	done
}

create_links ../common common "list.h fifo.h threads.h"

dnl mp1e standalone distr cuts rte off, hence
create_links ../src . "context.h codec.h rte.h option.h rtepriv.h"

AC_CHECK_FUNCS(memalign)
AC_CHECK_FUNCS(program_invocation_name)

AC_DEFINE(ENABLE_V4L, 1, [For Z/VBI])
AC_DEFINE(NO_TVENG_H, 1, [For Z/VBI])

dnl
dnl Test 'as' support for SSE2
dnl
use_sse2=no
AC_MSG_CHECKING([whether as supports SSE2])
AC_TRY_COMPILE(, __asm__ __volatile__ (" movdqu 0,%xmm0\n"),
	[AC_DEFINE(USE_SSE2, 1, [Define if 'as' supports SSE2])
	 use_sse2=yes])
AC_MSG_RESULT($use_sse2)
AM_CONDITIONAL(USE_SSE2, test x$use_sse2 = xyes)

dnl
dnl MMX emulator for testing purposes
dnl
AC_CHECK_LIB(mmxemu, mmxemu_configure)

dnl ---------------------------------------------------------------------------
dnl Driver interfaces
dnl ---------------------------------------------------------------------------

dnl
dnl OSS support
dnl
have_oss=no
AC_CHECK_HEADER(sys/soundcard.h,
	[have_oss=yes
	 AC_DEFINE(HAVE_OSS, 1, [Define if the OSS API is available])])

dnl
dnl ALSA support (libasound)
dnl
have_libasound=no
AM_PATH_ALSA_([0.5.9], have_libasound=yes, true)
if test "x$have_libasound" = "xyes"; then
	AC_DEFINE(HAVE_ALSA, 1, [Define if you have ALSA.])
fi

dnl
dnl EsounD support
dnl
have_esd=no
AC_MSG_CHECKING(for EsounD)
ESD_VERSION=`esd-config --version`
if test $? -eq 0; then
	AC_MSG_RESULT($ESD_VERSION)
	ESD_LIBS=`esd-config --libs`
	ESD_CFLAGS=`esd-config --cflags`
	AC_SUBST(ESD_CFLAGS)
	AC_SUBST(ESD_LIBS)
	have_esd=yes
	AC_DEFINE(HAVE_ESD, 1, [Define if you have ESD.])
else
	AC_MSG_RESULT([not present])
fi

dnl
dnl Audio File library (libaudiofile)
dnl for audio compression from WAV etc
dnl
have_audiofile=yes
AC_CHECK_HEADER(audiofile.h,
	AC_CHECK_LIB(audiofile, afSetVirtualSampleFormat,,
		have_audiofile=no), have_audiofile=no)

dnl ---------------------------------------------------------------------------

dnl
dnl XVideo support (libxv)
dnl for preview
dnl
AC_PATH_XTRA
AC_CHECK_LIB(Xv, XvShmPutImage, HAVE_XV="yes",, $X_LIBS -lX11 -lXext)

dnl
dnl Test GUI
dnl
AC_ARG_ENABLE(test,[  --enable-test           enable test gui])
if test "$enable_test" = "yes"; then
if test "$HAVE_XV" = "yes"; then
	GTK_LIBS="`gtk-config --libs` -lXv -lXext"
	GTK_CFLAGS=`gtk-config --cflags`
	AC_SUBST(GTK_CFLAGS)
	AC_SUBST(GTK_LIBS)
	AC_DEFINE(TEST_PREVIEW, 1, [Define to compile preview.])
	AC_DEFINE(HAVE_LIBXV, 1, [Define if you have the XVideo library (-lxv).])
fi
fi

AC_OUTPUT([
Makefile
video/Makefile
audio/Makefile
vbi/Makefile
systems/Makefile
common/Makefile
devices/Makefile
test/Makefile
mp1e.lsm
mp1e.spec
])

echo "
	Mp1e frontend driver interfaces
	-------------------------------
	Video For Linux				yes
	Video For Linux Two			yes
	Open Sound System			$have_oss
	Advanced Linux Sound Architecture	$have_libasound
	Enlightened Sound Daemon		$have_esd
	SGI Audio File Library			$have_audiofile
"
